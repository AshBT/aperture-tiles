<!DOCTYPE web-app PUBLIC
"-//Sun Microsystems, Inc.//DTD Web Application 2.3//EN"
"http://java.sun.com/dtd/web-app_2_3.dtd" >

<web-app>
  <display-name>Data Tile Server</display-name>

  <!-- Module Configuration -->
  <!-- If you have your own Guice module(s), put them here as a colon-separated
       list. -->
  <context-param>
    <param-name>guice-modules</param-name>
    <param-value>
      <!-- A :-separated list of modules, so there must be a : after all but 
	   the last module listed. -->

      <!-- Storage type __________________________________________________ -->
      <!-- Pick one of the modules below.  Note that appropriate properties 
	   must be set in tile.properties to match the storage module 
	   chosen. -->
      <!-- To read tiles from HBase -->
      com.oculusinfo.tile.spi.impl.pyramidio.io.HBaseModule:
      <!-- To read tiles from the file system -->
      <!-- com.oculusinfo.tile.spi.impl.pyramidio.io.FileSystemModule:-->
      <!-- To read tiles from a .jar file -->
      <!-- com.oculusinfo.tile.spi.impl.pyramidio.io.ResourceStreamModule: -->
      <!-- To read tiles from a .zip file -->
      <!-- com.oculusinfo.tile.spi.impl.pyramidio.io.ZipResourceStreamModule: -->
      <!-- To read tiles from a SQLite database -->
      <!-- com.oculusinfo.tile.spi.impl.pyramidio.io.SQLiteModule: -->

      <!-- Sets up the REST interface by which clients can retrieve tiles -->
      com.oculusinfo.tile.RestConfigModule:
      <!-- Sets up the tile-rendering service -->
      com.oculusinfo.tile.spi.impl.pyramidio.image.ImageTileModule
    </param-value>
  </context-param>

  <!-- Config File Location -->
  <!-- Provide the path to the config defaults override properties file here to
       override the default values -->
  <context-param>
    <param-name>apertureConfig</param-name>
    <param-value>res:///tile.properties</param-value>
  </context-param>

  <!-- Run all requests through the Guice servlet filter -->
  <filter>
    <filter-name>guiceFilter</filter-name>
    <filter-class>com.google.inject.servlet.GuiceFilter</filter-class>
  </filter>

  <filter-mapping>
    <filter-name>guiceFilter</filter-name>
    <url-pattern>/*</url-pattern>
  </filter-mapping>

  <!-- Servlet config must run on app deployment -->
  <listener>
    <listener-class>oculus.aperture.ApertureServerConfig</listener-class>
  </listener>

</web-app>
