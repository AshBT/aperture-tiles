#
# Any application specific properties for the Tile server, including
# any overrides for the default aperture service config 
#

# Bind configurations to named guice injections
aperture.server.config.bindnames = true


# ================================ Pyramid IO ================================
# The following specifies the exact location from which tile pyramids will be
# read.  Which property is used depends on which storage module is used in
# WEB_INF/web.xml.

# == HBase Based
# These properties are read if the following storage module is used:
#     com.oculusinfo.tile.spi.impl.pyramidio.io.HBaseModule
#
# The HBase ensemble server:
com.oculusinfo.tile.pyramidio.hbase.zookeeperQuorum =hadoop-s1.oculus.local
# The zookeeper port on said ensemble server:
com.oculusinfo.tile.pyramidio.hbase.zookeeperPort =2181
# The name of the HBase master machine:
com.oculusinfo.tile.pyramidio.hbase.hbaseMaster =hadoop-s1.oculus.local:60000

# == File System Based
# This location is read if the following storage module is used:
#     com.oculusinfo.tile.spi.impl.pyramidio.io.FileSystemModule

# The location on the file system in which to look for tile sets:
#com.oculusinfo.tile.pyramidio.file.location = /Users/slangevin/data/tiles/local-tilesets
#com.oculusinfo.tile.pyramidio.file.extension = avro

# == Class Resource Stream Based
# This location is read if the following storage module is used:
#     com.oculusinfo.tile.spi.impl.pyramidio.io.ResourceStreamModule
#
# The package location in which to look for tile sets:
# com.oculusinfo.tile.pyramidio.resource.location = /local-tilesets/
# com.oculusinfo.tile.pyramidio.resource.extension = avro

# -- Zip-file based
# This location is read if the following storage module is used:
#     com.oculusinfo.tile.spi.impl.pyramidio.io.ZipResourceStreamModule
#
# The location of the zip file containing the tile pyramid(s):
# com.oculusinfo.tile.pyramidio.resource.location = /local-tilesets.zip
# com.oculusinfo.tile.pyramidio.resource.extension = avro

# == SQLite database Based
# This property is read if the following storage module is used:
#     com.oculusinfo.tile.spi.impl.pyramidio.io.SQLiteModule
#
# The name of the database location in which SQLite should look for tile
# pyramids:
# com.oculusinfo.tile.pyramidio.sqlite.db.location = 

# == PreRendered tiles
# A file-system location in which to look for .png images to use directly
# as tiles.
#
# Pre-rendered tiles can be used concurrently with one of the above methods.
#
# Pre-rendered tiles are expected to be arranged as follows:
#     <root location>/<layer name>/tiles/<level>/<x>/<y>.png
# where level, x, and y specify the coordinates of each tile within the 
# pyramid.
#
# The root location of pre-rendered tiles:
# com.oculusinfo.tile.prerendered.location = 
