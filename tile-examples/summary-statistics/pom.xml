<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/maven-v4_0_0.xsd">
  <modelVersion>4.0.0</modelVersion>
  <artifactId>summary-statistics</artifactId>
  <packaging>war</packaging>
  <name>Tukey Summary Statistics Tool</name>
  <url>http://github.com/oculusinfo/aperture-tiles</url>
  <description>Tool to generate summary statistics for big data sets.</description>

  <parent>
    <artifactId>tile-examples</artifactId>
    <groupId>com.oculusinfo</groupId>
    <version>0.3-SNAPSHOT</version>
  </parent>
  
  	<properties>
		<local.war.outputDir>${project.outputDirectory}</local.war.outputDir>
	</properties>

  <profiles>
    <profile>
      <!-- This adds the jdk.tools dependency if it's available through the JAVA_HOME env var -->
      <activation>
        <activeByDefault>false</activeByDefault>
        <file>
          <exists>${env.JAVA_HOME}/lib/tools.jar</exists>
        </file>
      </activation>
      
      <dependencies>
        <dependency>
          <groupId>jdk.tools</groupId>
          <artifactId>jdk.tools</artifactId>
          <version>1.7</version>
          <scope>system</scope>
          <systemPath>${JAVA_HOME}/lib/tools.jar</systemPath>
        </dependency>
      </dependencies>
    </profile>
  </profiles>
  
  <dependencies>
    <dependency>
      <groupId>com.oculusinfo</groupId>
      <artifactId>tile-client</artifactId>
      <version>${project.version}</version>
      <type>war</type>
    </dependency>
  
 	<dependency>
      <groupId>org.apache.hadoop</groupId>
      <artifactId>hadoop-client</artifactId>
      <version>${hadoop-core-version}</version>
      <exclusions>
        <exclusion>
          <artifactId>asm</artifactId>
          <groupId>asm</groupId>
        </exclusion>
      </exclusions>
    </dependency>
    
    <dependency>
      <groupId>org.apache.spark</groupId>
      <artifactId>spark-core_${dependency-scala-version}</artifactId>
      <version>${spark-version}</version>
    </dependency>

    <dependency>
      <groupId>org.apache.spark</groupId>
      <artifactId>spark-streaming_${dependency-scala-version}</artifactId>
      <version>${spark-version}</version>
    </dependency>

    <dependency>
      <groupId>org.scala-lang</groupId>
      <artifactId>scala-library</artifactId>
      <version>${scala-version}</version>
    </dependency>

    <dependency>
      <groupId>org.scalatest</groupId>
      <artifactId>scalatest_${dependency-scala-version}</artifactId>
      <version>1.9.1</version>
      <scope>test</scope>
    </dependency>
    
    <dependency>
      <groupId>org.json</groupId>
      <artifactId>json</artifactId>
      <version>20090211</version>
    </dependency>
  </dependencies> 
  
 

  <build>
	<sourceDirectory>src/main/scala</sourceDirectory>
    <testSourceDirectory>src/test/scala</testSourceDirectory>
    
    <plugins>
      <plugin>
        <!-- see http://davidb.github.com/scala-maven-plugin -->
        <groupId>net.alchim31.maven</groupId>
        <artifactId>scala-maven-plugin</artifactId>
        <version>3.1.3</version>
        <executions>
          <execution>
            <goals>
              <goal>compile</goal>
              <goal>testCompile</goal>
            </goals>
            <configuration>
              <args>
                <arg>-make:transitive</arg>
                <arg>-dependencyfile</arg>
                <arg>${project.build.directory}/.scala_dependencies</arg>
              </args>
            </configuration>
          </execution>
        </executions>
      </plugin>
      
      <plugin>
        <groupId>org.apache.maven.plugins</groupId>
        <artifactId>maven-surefire-plugin</artifactId>
        <version>2.13</version>
        <configuration>
          <useFile>false</useFile>
          <disableXmlReport>true</disableXmlReport>
          <!-- If you have classpath issue like NoDefClassError,... -->
          <!-- useManifestOnlyJar>false</useManifestOnlyJar -->
          <includes>
            <include>**/*Test.*</include>
            <include>**/*Suite.*</include>
          </includes>
        </configuration>
      </plugin>
      
      <plugin>
        <groupId>org.apache.maven.plugins</groupId>
        <artifactId>maven-war-plugin</artifactId>
        <version>2.1.1</version>
        <configuration>
          <outputDirectory>${local.war.outputDir}</outputDirectory>
		  <attachClasses>true</attachClasses>
          <overlays>
            <overlay>
              <groupId>com.oculusinfo</groupId>
              <artifactId>tile-client</artifactId>
            </overlay>
          </overlays>
          <webResources>
          	<resource>
              <directory>${project.build.directory}/generated-sources/html</directory>
              <includes>
                <include>*.html</include>
              </includes>
            </resource>
          </webResources> 
        </configuration>
      </plugin>

      <plugin>
        <!-- Jetty For Dev Builds Only -->
        <groupId>org.mortbay.jetty</groupId>
        <artifactId>jetty-maven-plugin</artifactId>
        <version>7.2.0.v20101020</version>
        <configuration>                                                        
          <webAppConfig>
            <contextPath>/${project.artifactId}</contextPath>
            <baseResource implementation="org.eclipse.jetty.util.resource.ResourceCollection">
              Use the development (source) code
              <resourcesAsCSV>src/main/webapp,../../tile-client/src/main/webapp,${project.build.directory}/${project.build.finalName}</resourcesAsCSV>
            </baseResource>
          </webAppConfig>       
        </configuration>

        <dependencies>
          <dependency>
            <groupId>org.eclipse.jetty</groupId>
            <artifactId>jetty-server</artifactId>
            <version>7.2.0.v20101020</version>
          </dependency>
        </dependencies>
      </plugin>
      

      <plugin>
      	<groupId>org.codehaus.gmaven</groupId>
	    <artifactId>gmaven-plugin</artifactId>
	    <version>1.4</version>
	    <executions>
		  <execution>
		    <phase>generate-resources</phase>
	        <goals>
	          <goal>execute</goal>
	        </goals>
	        <configuration>
			  <defaults>
				<outputDirectory>${project.build.directory}/generated-sources/html</outputDirectory>
		        <toc>toc.html</toc>
		        <dataDir>${project.basedir}/src/main/webapp/data</dataDir>
		      </defaults>
			  <source>${project.basedir}/src/main/groovy/build-toc.groovy</source>
			</configuration>
		  </execution>
	    </executions>		    
      </plugin>

    </plugins>
  </build>
</project>
