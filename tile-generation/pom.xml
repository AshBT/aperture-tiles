<project xmlns="http://maven.apache.org/POM/4.0.0"
         xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
         xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
	<modelVersion>4.0.0</modelVersion>
	<artifactId>tile-generation</artifactId>
	<name>Aperture Spark Tile Generation</name>
	<description>
		A Spark-based library to aid in easy tile and tile pyramid generation
	</description>

	<!-- Note that when one changes the parent version (and, hence, the project 
	     version) here, one must also change it in build.sbt (both project and 
	     dependencies), so that the SBT build (typically only used during 
	     development) also picks up the version change(s) -->
	<parent>
		<artifactId>aperture-tiles</artifactId>
		<groupId>com.oculusinfo</groupId>
		<version>0.3-SNAPSHOT</version>
	</parent>

	<dependencies>
		<dependency>
			<groupId>org.apache.spark</groupId>
			<artifactId>spark-core_${dependency-scala-version}</artifactId>
			<version>${spark-version}</version>
		</dependency>

		<dependency>
			<groupId>org.apache.spark</groupId>
			<artifactId>spark-streaming_${dependency-scala-version}</artifactId>
			<version>${spark-version}</version>
		</dependency>

		<dependency>
			<groupId>com.oculusinfo</groupId>
			<artifactId>binning-utilities</artifactId>
			<version>${project.version}</version>
			<exclusions>
				<exclusion>
					<artifactId>asm</artifactId>
					<groupId>asm</groupId>
				</exclusion>
			</exclusions>
		</dependency>

		<dependency>
			<groupId>org.apache.hadoop</groupId>
			<artifactId>hadoop-client</artifactId>
			<version>${hadoop-core-version}</version>
		</dependency>

		<dependency>
			<groupId>org.apache.hbase</groupId>
			<artifactId>hbase</artifactId>
			<version>${hbase-version}</version>
			<exclusions>
				<exclusion>
					<artifactId>asm</artifactId>
					<groupId>asm</groupId>
				</exclusion>
				<exclusion>
					<artifactId>slf4j-api</artifactId>
					<groupId>org.slf4j</groupId>
				</exclusion>
				<exclusion>
					<artifactId>slf4j-log4j12</artifactId>
					<groupId>org.slf4j</groupId>
				</exclusion>
			</exclusions>
		</dependency>

		<dependency>
			<groupId>org.scala-lang</groupId>
			<artifactId>scala-library</artifactId>
			<version>${scala-version}</version>
		</dependency>

		<dependency>
			<groupId>org.scalatest</groupId>
			<artifactId>scalatest_${dependency-scala-version}</artifactId>
			<version>1.9.1</version>
			<scope>test</scope>
		</dependency>
	</dependencies>


	<build>
		<!-- Store version number in a way that lets code access it. -->
		<resources>
			<resource>
				<directory>src/main/filtered-resources</directory>
				<filtering>true</filtering>
			</resource>
		</resources>


		<plugins>
			<!-- Copy scripts, with filtering to insert build numbers, into
			     the scripts directory. -->
			<plugin>
				<artifactId>maven-resources-plugin</artifactId>
				<version>2.6</version>
				<executions><execution>
					<id>copy-resources</id>
					<phase>package</phase>
					<goals><goal>copy-resources</goal></goals>
					<configuration>
						<outputDirectory>${basedir}/scripts</outputDirectory>
						<resources><resource>
							<directory>src/main/filtered-scripts</directory>
							<filtering>true</filtering>
						</resource></resources>
					</configuration>
				</execution></executions>
			</plugin>

			<plugin>
				<groupId>org.scala-tools</groupId>
				<artifactId>maven-scala-plugin</artifactId>
				<version>2.15.2</version>
				<configuration>
					<args>
						<arg>-deprecation</arg>
						<arg>-unchecked</arg>
					</args>
				</configuration>
				<executions>
					<execution>
						<id>compile</id>
						<goals><goal>compile</goal></goals>
						<phase>compile</phase>
					</execution>
					<execution>
						<id>test-compile</id>
						<goals><goal>testCompile</goal></goals>
						<phase>test-compile</phase>
					</execution>
					<execution>
						<phase>process-resources</phase>
						<goals><goal>compile</goal></goals>
					</execution>
				</executions>
			</plugin>

			<!-- Plugin to produce a source jar -->
			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-source-plugin</artifactId>
				<version>2.2.1</version>
				<executions>
					<execution>
						<id>attach-sources</id>
						<goals> <goal>jar</goal> </goals>
					</execution>
				</executions>
			</plugin>

			<!-- Plugin to produce a javadoc jar -->
			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-javadoc-plugin</artifactId>
				<version>2.9.1</version>
				<executions>
					<execution>
						<id>attach-javadocs</id>
						<goals> <goal>jar</goal> </goals>
					</execution>
				</executions>
			</plugin>

			<!-- We need to create a test jar too, not just a source jar -->
			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-jar-plugin</artifactId>
				<version>2.4</version>
				<executions>
					<execution>
						<goals>
							<goal>test-jar</goal>
						</goals>
					</execution>
				</executions>
			</plugin>

			<!-- Disable surefire plugin - using scalatest instead -->
			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-surefire-plugin</artifactId>
				<version>2.7</version>
				<configuration>
					<skipTests>true</skipTests>
				</configuration>
			</plugin>

			<!-- Enable scalatest plugin -->
			<plugin>
				<groupId>org.scalatest</groupId>
				<artifactId>scalatest-maven-plugin</artifactId>
				<version>1.0-M2</version>
				<configuration>
					<reportsDirectory>
						${project.build.directory}/surefire-reports
					</reportsDirectory>
					<junitxml>.</junitxml>
					<stdout>F</stdout>
					<filereports>WDF TestSuite.txt</filereports>
				</configuration>
				<executions>
					<execution>
						<id>test</id>
						<goals>
							<goal>test</goal>
						</goals>
					</execution>
				</executions>
			</plugin>

			<!-- Allow viewing the dependency tree -->
			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-dependency-plugin</artifactId>
				<version>2.8</version>
			</plugin>
		</plugins>
	</build>
</project>
