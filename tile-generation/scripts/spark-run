#!/bin/bash

# Make sure SPARK_HOME is set
if [ "a" == "a""$SPARK_HOME" ]; then
	echo SPARK_HOME not set.  Please set SPARK_HOME environment variable and try again.
	exit 1
fi

# Make sure SCALA_HOME is set
if [ "a" == "a""$SCALA_HOME" ]; then
	echo SCALA_HOME not set.  Please set SCALA_HOME environment variable and try again.
	exit 1
fi

function getJar {
	scriptGroupId=$1
	scriptArtifactId=$2
	scriptVersion=$3
	groupDir=`echo ${scriptGroupId} | sed 's|\.|/|g'`
	repo=${HOME}/.m2/repository
	jardir=${repo}/${groupDir}/${scriptArtifactId}/${scriptVersion}
	JAR=${jardir}/${scriptArtifactId}-${scriptVersion}.jar

	if [ ${OSTYPE} == "cygwin" ]; then
		export JAR="$(cygpath -p -w "${JAR}")"
	fi
}

function addSparkJar {
	getJar $1 $2 $3
	jar=${JAR}

	# Testing for existence of jar
	if [ ! -e ${jar} ]
	then
		echo Error: Looking for ${jar} - not found
		exit
	fi

	# Add the jar to the jar list
	if [ "a" == "a"${SPARK_JARS} ]; then
		export SPARK_JARS=${jar}
	else
		export SPARK_JARS=${SPARK_JARS},${jar}
	fi
}

# Set up the list of extra jars needed
# our own jars
addSparkJar com.oculusinfo math-utilities 0.4-cdh4.6.0-SNAPSHOT
addSparkJar com.oculusinfo binning-utilities 0.4-cdh4.6.0-SNAPSHOT 

# framework-related jars
addSparkJar org.apache.hbase hbase 0.94.15-cdh4.6.0
addSparkJar org.scala-lang scala-library 0.94.15-cdh4.6.0
# json version is derived indirectly, can't be coded here.
addSparkJar org.json json 20090211

# Finally, get our main jar
getJar com.oculusinfo tile-generation 0.4-cdh4.6.0-SNAPSHOT


MAIN_CLASS=$1
shift

echo Running Spark from $SPARK_HOME
echo Running Spark with jars ${SPARK_JARS}
echo Running spark with main jar ${JAR}
echo Running main class ${MAIN_CLASS}

${SPARK_HOME}/bin/spark-submit --jars ${SPARK_JARS} --class ${MAIN_CLASS} ${JAR} $*
