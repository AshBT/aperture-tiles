description = "A basic javascript library for displaying aperture-tiles generated tiles"

apply plugin: "war"

// Define a configuration for the war overlay process.
configurations {
	tileClientUnderlay
}
// Add the output of the war task to the tile client - this should be the combination
// of the tile-service and the tile-client content
artifacts {
	tileClientUnderlay war
}

// Add the tile service war to the overlay config so we can reference it below.  Pull the 
// tile service war out of that project's exposed config.
dependencies {
	compile project(":annotation-service")
	tileClientUnderlay project(path: ":tile-service", configuration: "tileServiceUnderlay")
}

// Append the overlay process to the end of the WAR task - it just grabs the client
// underlay
war << {
	// unpack all the war files into the temp directory for this task
	configurations.tileClientUnderlay.each {
		ant.unwar src: it, dest: temporaryDir
	}
	// update the war file, but when a duplicate file is found preserve the original
	ant.war basedir: temporaryDir, destfile: archivePath, update: true
}
war.dependsOn ":tile-service:war"
